/**
 * 公历每个月份的天数普通表
 * 1，3，5，7，8，10，12月为 31 天
 * 2月为28天，若闰年会在获取天数时+1天
 * 其余月份为30天
 */
export const SOLAR_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] as const;

/**
 * 天干速查表
 */
export const HEAVENLY_STEMS = ['甲','乙','丙','丁','戊','己','庚','辛','壬','癸'] as const;

/**
 * 地支速查表
 */
export const EARTHLY_BRANCHES = ['子','丑','寅','卯','辰','巳','午','未','申','酉','戌','亥'] as const;

/**
 * 五虎遁
 */
export const RAT_RULE = {
  甲: '甲',
  乙: '丙',
  丙: '戊',
  丁: '庚',
  戊: '壬',
  己: '甲',
  庚: '丙',
  辛: '戊',
  壬: '庚',
  癸: '壬',
} as const;

/**
 * 24节气速查表
 */
export const SOLAR_STEM = [
  '小寒',
  '大寒',
  '立春',
  '雨水',
  '惊蛰',
  '春分',
  '清明',
  '谷雨',
  '立夏',
  '小满',
  '芒种',
  '夏至',
  '小暑',
  '大暑',
  '立秋',
  '处暑',
  '白露',
  '秋分',
  '寒露',
  '霜降',
  '立冬',
  '小雪',
  '大雪',
  '冬至',
] as const;

/**
 * 数字转中文速查表
 * 1. 星期取值范围从0～6，表示星期日到星期六
 * 2. 日期取值范围从1～10
 */
export const NUM_TO_CHAR = ['日', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十'] as const;

/**
 * 日期转农历称呼速查表
 * 1. 将7日显示为 初七
 * 2. 将13日显示为 十三
 * 3. 将24日显示为 廿四
 * 4. 将31日显示为 卅一
 */
export const LUNAR_DAY_NAME = ['初', '十', '廿', '卅'] as const;

/**
 * 月份转农历称呼速查表
 * 1. 1月显示为正月
 * 2. 11月显示为冬月
 * 3. 12月显示为腊月
 * 4. 其他情况显示大写数字+月份
 */
export const LUNAR_MONTH_NAME = ['', '正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'] as const;

/**
 * 农历1900-2100的润大小信息表，为二进制表示，最后5位以下3条会有共享情况
 * 1. 前12位表示大小月，0表示小月（有29天），1表示大月（有30天）
 * 2. 最后4位表示闰月的月份（需将其转化成10进制），若当年没有闰月则为0000
 * 3. 倒数第5位为闰月的大小，0表示小月（有29天），1表示大月（有30天）
 */
export const LUNAR_INFO = [
  0b100101111011000, 0b100101011100000, 0b1010010101110000, 0b101010011010101, 0b1101001001100000, 0b1101100101010000,
  0b10110010101010100, 0b101011010100000, 0b1001101011010000, 0b101010111010010, 0b100101011100000, 0b1010010110110110,
  0b1010010011010000, 0b1101001001010000, 0b11101001001010101, 0b1011010101000000, 0b1101011010100000,
  0b1010110110100010, 0b1001010110110000, 0b10100100101110111, 0b100100101110000, 0b1010010010110000,
  0b1011010010110101, 0b110101001010000, 0b110110101000000, 0b11010101101010100, 0b10101101100000, 0b1001010101110000,
  0b101001011110010, 0b100100101110000, 0b110010101100110, 0b1101010010100000, 0b1110101001010000, 0b110111010010101,
  0b101101011010000, 0b10101101100000, 0b11000011011100011, 0b1001001011100000, 0b11100100011010111, 0b1100100101010000,
  0b1101010010100000, 0b11101100010100110, 0b1011010101010000, 0b101011010100000, 0b11010010110110100, 0b10010111010000,
  0b1001001011010000, 0b1101001010110010, 0b1010100101010000, 0b1011010101010111, 0b110110010100000, 0b1011010101010000,
  0b10101001101010101, 0b100110110100000, 0b1010010110110000, 0b10100010101110011, 0b101001010110000,
  0b1010100110101000, 0b1110100101010000, 0b110101010100000, 0b1010111010100110, 0b1010101101010000, 0b100101101100000,
  0b1010101011100100, 0b1010010101110000, 0b101001001100000, 0b1111001001100011, 0b1101100101010000, 0b101101101010111,
  0b101011010100000, 0b1001011011010000, 0b100110111010101, 0b100101011010000, 0b1010010011010000, 0b1101010011010100,
  0b1101001001010000, 0b1101010101011000, 0b1011010101000000, 0b1011011010100000, 0b11001010110100110,
  0b1001010110110000, 0b100100110110000, 0b1010100101110100, 0b1010010010110000, 0b1011001001111010, 0b110101001010000,
  0b110110101000000, 0b1010111101000110, 0b1010101101100000, 0b1001010101110000, 0b100101011110101, 0b100100101110000,
  0b110010010110000, 0b111010010100011, 0b1110101001010000, 0b110101101011000, 0b101101011000000, 0b1010101101100000,
  0b1001011011010101, 0b1001001011100000, 0b1100100101100000, 0b1101100101010100, 0b1101010010100000,
  0b1101101001010000, 0b111010101010010, 0b101011010100000, 0b1010101110110111, 0b10010111010000, 0b1001001011010000,
  0b1100101010110101, 0b1010100101010000, 0b1011010010100000, 0b1011101010100100, 0b1010110101010000, 0b101010111011001,
  0b100101110100000, 0b1010010110110000, 0b10101000101110110, 0b101001010110000, 0b1010100100110000, 0b111100101010100,
  0b110101010100000, 0b1010110101010000, 0b101101101010010, 0b100101101100000, 0b1010011011100110, 0b1010010011100000,
  0b1101001001100000, 0b1110101001100101, 0b1101010100110000, 0b101101010100000, 0b111011010100011, 0b1001011011010000,
  0b100101011111011, 0b100101011010000, 0b1010010011010000, 0b11101000010110110, 0b1101001001010000, 0b1101010100100000,
  0b1101110101000101, 0b1011010110100000, 0b101011011010000, 0b101010110110010, 0b100100110110000, 0b1010010101110111,
  0b1010010010110000, 0b1010101001010000, 0b11011001001010101, 0b110110100100000, 0b1010110110100000,
  0b10100101101100011, 0b1001001101110000, 0b100100111111000, 0b100100101110000, 0b110010010110000, 0b10110100010100110,
  0b1110101001010000, 0b110101100100000, 0b11010011011000100, 0b1010101011100000, 0b1010001011100000,
  0b1101001011100011, 0b1100100101100000, 0b1101010101010111, 0b1101010010100000, 0b1101101001010000, 0b101110101010101,
  0b101011010100000, 0b1010011011010000, 0b101010111010100, 0b101001011010000, 0b1010100110111000, 0b1010100101010000,
  0b1011010010100000, 0b1011011010100110, 0b1010110101010000, 0b101010110100000, 0b1010101110100100, 0b1010010110110000,
  0b101001010110000, 0b1011001001110011, 0b110100100110000, 0b111001100110111, 0b110101010100000, 0b1010110101010000,
  0b10100101101010101, 0b100101101100000, 0b1010010101110000, 0b101010011100100, 0b1101000101100000, 0b1110100101101000,
  0b1101010100100000, 0b1101101010100000, 0b10110101010100110, 0b101011011010000, 0b100101011100000, 0b1010100111010100,
  0b1010001011010000, 0b1101000101010000, 0b1111001001010010, 0b1101010100100000,
] as const;

/**
 * 1900-2100各年的24节气日期速查表
 * .substring(0, 4)).toString()
 */
export const TERM_INFO = [
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c3598082c95f8c965cc920f',
  '97bd0b06bdb0722c965ce1cfcc920f',
  'b027097bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c359801ec95f8c965cc920f',
  '97bd0b06bdb0722c965ce1cfcc920f',
  'b027097bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c359801ec95f8c965cc920f',
  '97bd0b06bdb0722c965ce1cfcc920f',
  'b027097bd097c36b0b6fc9274c91aa',
  '9778397bd19801ec9210c965cc920e',
  '97b6b97bd19801ec95f8c965cc920f',
  '97bd09801d98082c95f8e1cfcc920f',
  '97bd097bd097c36b0b6fc9210c8dc2',
  '9778397bd197c36c9210c9274c91aa',
  '97b6b97bd19801ec95f8c965cc920e',
  '97bd09801d98082c95f8e1cfcc920f',
  '97bd097bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36c9210c9274c91aa',
  '97b6b97bd19801ec95f8c965cc920e',
  '97bcf97c3598082c95f8e1cfcc920f',
  '97bd097bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36c9210c9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c3598082c95f8c965cc920f',
  '97bd097bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c3598082c95f8c965cc920f',
  '97bd097bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c359801ec95f8c965cc920f',
  '97bd097bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c359801ec95f8c965cc920f',
  '97bd097bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf97c359801ec95f8c965cc920f',
  '97bd097bd07f595b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9210c8dc2',
  '9778397bd19801ec9210c9274c920e',
  '97b6b97bd19801ec95f8c965cc920f',
  '97bd07f5307f595b0b0bc920fb0722',
  '7f0e397bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36c9210c9274c920e',
  '97b6b97bd19801ec95f8c965cc920f',
  '97bd07f5307f595b0b0bc920fb0722',
  '7f0e397bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36c9210c9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bd07f1487f595b0b0bc920fb0722',
  '7f0e397bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf7f1487f595b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf7f1487f595b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf7f1487f531b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c965cc920e',
  '97bcf7f1487f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b97bd19801ec9210c9274c920e',
  '97bcf7f0e47f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '9778397bd097c36b0b6fc9210c91aa',
  '97b6b97bd197c36c9210c9274c920e',
  '97bcf7f0e47f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '9778397bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36c9210c9274c920e',
  '97b6b7f0e47f531b0723b0b6fb0722',
  '7f0e37f5307f595b0b0bc920fb0722',
  '7f0e397bd097c36b0b6fc9210c8dc2',
  '9778397bd097c36b0b70c9274c91aa',
  '97b6b7f0e47f531b0723b0b6fb0721',
  '7f0e37f1487f595b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc9210c8dc2',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f595b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '9778397bd097c36b0b6fc9274c91aa',
  '97b6b7f0e47f531b0723b0787b0721',
  '7f0e27f0e47f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '9778397bd097c36b0b6fc9210c91aa',
  '97b6b7f0e47f149b0723b0787b0721',
  '7f0e27f0e47f531b0723b0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '9778397bd097c36b0b6fc9210c8dc2',
  '977837f0e37f149b0723b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0722',
  '7f0e37f5307f595b0b0bc920fb0722',
  '7f0e397bd097c35b0b6fc9210c8dc2',
  '977837f0e37f14998082b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e37f1487f595b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc9210c8dc2',
  '977837f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '977837f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd097c35b0b6fc920fb0722',
  '977837f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '977837f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '977837f0e37f14998082b0787b06bd',
  '7f07e7f0e47f149b0723b0787b0721',
  '7f0e27f0e47f531b0b0bb0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '977837f0e37f14998082b0723b06bd',
  '7f07e7f0e37f149b0723b0787b0721',
  '7f0e27f0e47f531b0723b0b6fb0722',
  '7f0e397bd07f595b0b0bc920fb0722',
  '977837f0e37f14898082b0723b02d5',
  '7ec967f0e37f14998082b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0722',
  '7f0e37f1487f595b0b0bb0b6fb0722',
  '7f0e37f0e37f14898082b0723b02d5',
  '7ec967f0e37f14998082b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0722',
  '7f0e37f1487f531b0b0bb0b6fb0722',
  '7f0e37f0e37f14898082b0723b02d5',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e37f1487f531b0b0bb0b6fb0722',
  '7f0e37f0e37f14898082b072297c35',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e37f0e37f14898082b072297c35',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e37f0e366aa89801eb072297c35',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f149b0723b0787b0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
  '7f0e37f0e366aa89801eb072297c35',
  '7ec967f0e37f14998082b0723b06bd',
  '7f07e7f0e47f149b0723b0787b0721',
  '7f0e27f0e47f531b0723b0b6fb0722',
  '7f0e37f0e366aa89801eb072297c35',
  '7ec967f0e37f14998082b0723b06bd',
  '7f07e7f0e37f14998083b0787b0721',
  '7f0e27f0e47f531b0723b0b6fb0722',
  '7f0e37f0e366aa89801eb072297c35',
  '7ec967f0e37f14898082b0723b02d5',
  '7f07e7f0e37f14998082b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0722',
  '7f0e36665b66aa89801e9808297c35',
  '665f67f0e37f14898082b0723b02d5',
  '7ec967f0e37f14998082b0787b0721',
  '7f07e7f0e47f531b0723b0b6fb0722',
  '7f0e36665b66a449801e9808297c35',
  '665f67f0e37f14898082b0723b02d5',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e36665b66a449801e9808297c35',
  '665f67f0e37f14898082b072297c35',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e26665b66a449801e9808297c35',
  '665f67f0e37f1489801eb072297c35',
  '7ec967f0e37f14998082b0787b06bd',
  '7f07e7f0e47f531b0723b0b6fb0721',
  '7f0e27f1487f531b0b0bb0b6fb0722',
] as const;

/** 十二生肖（按地支顺序） */
export const ZODIAC = [
  '鼠',
  '牛',
  '虎',
  '兔',
  '龙',
  '蛇',
  '马',
  '羊',
  '猴',
  '鸡',
  '狗',
  '猪',
] as const;